# This script is designed to go through the process of creating and checking the connections of a Xilinx FPGA project from scematic through to top level design.

# # setup the project settings
# filename = "test"#sys.argv[1]
# netlist_filename = 'BMDPCB1120B_NETLIST.txt' #sys.argv[2] 
# chip_id = 'U12' #sys.argv[3]  #this si the symbol in the scematic for the FPGA ic ----!!!! NOTE: make sure that this has a captial leter designator (eg: U17)
import os
import sys

# Check for correct number of arguments
if len(sys.argv) != 4:
    print("Usage: python new_project.py <filename> <netlist_filename> <chip_id>")
    sys.exit(1)

# Get input arguments
filename = sys.argv[1]
netlist_filename = sys.argv[2]
chip_id = sys.argv[3]

print("******** Starting NEW PROJECT SCRIPT ********")
print("This script will take a schematic netlist in .txt format and, create a VHDL top level document and a constraints file with pin locations")
print("")

print("******** Making VHDL from SCH ********")
# Read the schematic file and make a VHDL file with ports matching the PLI,PLO,PLIO,PADI,PADO,PADIO net name
os.system(f"python make_tld_from_sch_2.py {filename} {netlist_filename} {chip_id}")

print("******** Making XDC from VHDL ********")
# Make a constraints file from this top level VHDL file with XXX for all of the pin locations (for now)
os.system(f"python make_xdc.py {filename} {filename}_gen.vhd ")

print("******** Matching XDC names to SCH pin numbers ********")
# Get the pin names and locations from the schematic file and apply them to the constraints file
os.system(f"python get_sch_loc.py {filename}.xdc {netlist_filename} {chip_id}")

print("******** Updating XDC with pin locations ********")
# Replace the pin locations in the file generated by make_xdc with the locations found in get_sch_loc.py
os.system(f"python replace_sch_pins.py {filename}.xdc matched_pins_with_sch.xdc XXX")

print("******** Checking for Mistakes ********")
# Check, to be sure the pin matches between NETLIST AND CONSTRAINTS file
# os.system(f"python check_sch.py matched_pins_with_sch.xdc {netlist_filename}") ## THIS IS BROKEN AT THE MOMENT???
# Check, to be sure the pin/ports match between VHDL AND CONSTRAINTS file
os.system(f"python check_xdc.py {filename}.xdc {filename}_gen.vhd")

# Remove temporary files
print("Removing temporary files...")
if os.path.exists("matched_pins_with_sch.xdc"):
    os.remove("matched_pins_with_sch.xdc")
else:
    print("Error removing temp files!")

print("Finished")
print(f"The final generated files are: {filename}_gen.vhd and {filename}.xdc")
